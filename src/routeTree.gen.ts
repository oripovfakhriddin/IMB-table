/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as MainImport } from './routes/_main'
import { Route as AuthImport } from './routes/_auth'
import { Route as MainIndexImport } from './routes/_main/index'
import { Route as MainDetailIdImport } from './routes/_main/detail/$id'

// Create Virtual Routes

const AuthAuthLazyImport = createFileRoute('/_auth/auth')()

// Create/Update Routes

const MainRoute = MainImport.update({
  id: '/_main',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const MainIndexRoute = MainIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRoute,
} as any)

const AuthAuthLazyRoute = AuthAuthLazyImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => AuthRoute,
} as any).lazy(() => import('./routes/_auth/auth.lazy').then((d) => d.Route))

const MainDetailIdRoute = MainDetailIdImport.update({
  id: '/detail/$id',
  path: '/detail/$id',
  getParentRoute: () => MainRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_main': {
      id: '/_main'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof MainImport
      parentRoute: typeof rootRoute
    }
    '/_auth/auth': {
      id: '/_auth/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthLazyImport
      parentRoute: typeof AuthImport
    }
    '/_main/': {
      id: '/_main/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof MainIndexImport
      parentRoute: typeof MainImport
    }
    '/_main/detail/$id': {
      id: '/_main/detail/$id'
      path: '/detail/$id'
      fullPath: '/detail/$id'
      preLoaderRoute: typeof MainDetailIdImport
      parentRoute: typeof MainImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthAuthLazyRoute: typeof AuthAuthLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAuthLazyRoute: AuthAuthLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface MainRouteChildren {
  MainIndexRoute: typeof MainIndexRoute
  MainDetailIdRoute: typeof MainDetailIdRoute
}

const MainRouteChildren: MainRouteChildren = {
  MainIndexRoute: MainIndexRoute,
  MainDetailIdRoute: MainDetailIdRoute,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof MainRouteWithChildren
  '/auth': typeof AuthAuthLazyRoute
  '/': typeof MainIndexRoute
  '/detail/$id': typeof MainDetailIdRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/auth': typeof AuthAuthLazyRoute
  '/': typeof MainIndexRoute
  '/detail/$id': typeof MainDetailIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_main': typeof MainRouteWithChildren
  '/_auth/auth': typeof AuthAuthLazyRoute
  '/_main/': typeof MainIndexRoute
  '/_main/detail/$id': typeof MainDetailIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/auth' | '/' | '/detail/$id'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/auth' | '/' | '/detail/$id'
  id:
    | '__root__'
    | '/_auth'
    | '/_main'
    | '/_auth/auth'
    | '/_main/'
    | '/_main/detail/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  MainRoute: typeof MainRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  MainRoute: MainRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_main"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/auth"
      ]
    },
    "/_main": {
      "filePath": "_main.tsx",
      "children": [
        "/_main/",
        "/_main/detail/$id"
      ]
    },
    "/_auth/auth": {
      "filePath": "_auth/auth.lazy.tsx",
      "parent": "/_auth"
    },
    "/_main/": {
      "filePath": "_main/index.tsx",
      "parent": "/_main"
    },
    "/_main/detail/$id": {
      "filePath": "_main/detail/$id.tsx",
      "parent": "/_main"
    }
  }
}
ROUTE_MANIFEST_END */
